#!/usr/bin/perl -w

use Getopt::Long;

usage() unless ( $#ARGV eq 5);

GetOptions (
		"queue=s"	=> \$queue,
		"warn=i"	=> \$msg_warn,
		"crit=i"	=> \$msg_crit
);

$imqcmd = "/usr/local/openmq/mq/bin/imqcmd";
$imq_user = "admin";
$imq_passfile = "/usr/local/openmq/etc/mq/admin.pw";

die "Cannot locate/access MQ password file!\n" unless ( -f $imq_passfile );
die "Cannot locate/access imqcmd!\n" unless ( -f $imqcmd );

#print "$imqcmd -u $imq_user -rtr 1 -rtm 10 list dst -passfile ${imq_passfile}\n";

#-----------------------------------------------------------------------------------------------
#    Name      Type    State      Producers        Consumers                  Msgs                
#                              Total  Wildcard  Total  Wildcard  Count  Remote  UnAck  Avg Size 
#-----------------------------------------------------------------------------------------------
#friendTopic1  Topic  RUNNING  2      0         1      0         0      0       0      0.0
#friendTopic2  Topic  RUNNING  0      0         1      0         0      0       0      0.0
#lockerzQueue  Queue  RUNNING  0      -         0      -         0      0       0      0.0
#mq.sys.dmq    Queue  RUNNING  0      -         0      -         0      0       0      0.0
#photoTopic1   Topic  RUNNING  2      0         1      0         0      0       0      0.0
#photoTopic2   Topic  RUNNING  0      0         1      0         0      0       0      0.0
#searchQueue   Queue  RUNNING  6      -         2      -         4953   0       1978   758.84717


open(IMQCMD,"$imqcmd -u $imq_user -rtr 1 -rtm 10 list dst -passfile ${imq_passfile} |") || die "Cannot open ${imqcmd}: $!\n";
while(<IMQCMD>) {
		if ( /^(${queue})\s+\w+\s+(\w+)\s+([0-9]{1,})\s+.*?\s+([0-9]{1,})\s+.*?\s+([0-9]{1,})\s+([0-9]{1,})\s+([0-9]{1,})\s+([0-9]{1,}\.[0-9]{1,})/ ) {
			$queue_name	= $1;
			$state		= $2;
			$producers	= $3;
			$consumers	= $4;
			$msg_count	= $5;
			#$msg_remote	= $6;
			#$msg_unack	= $7;
			$msg_size	= $8;

			if ( $msg_count > $msg_warn && $msg_count < $msg_crit ) {
				print "WARNING: Queue $queue_name contains $msg_count messages State:${state} Producers:${producers} Consumers:${consumers} Size:${msg_size}\n";
				open(CLEARPURGE, "yes | /usr/local/openmq/mq/bin/imqcmd -u admin purge dst -t q -n $queue_name -passfile /usr/local/openmq/etc/mq/admin.pw 2>&1 | tee /tmp/purge.log|") || warn "Cannot purge queue: $!\n";
				while(<CLEARPURGE>) { print $_; }
				close(CLEARPURGE);
				exit 1;
			} elsif ( $msg_count > $msg_crit ) {
				print "CRITICAL: Queue $queue_name contains $msg_count messages State:${state} Producers:${producers} Consumers:${consumers} Size:${msg_size}\n";
				open(CLEARPURGE, "yes | /usr/local/openmq/mq/bin/imqcmd -u admin purge dst -t q -n $queue_name -passfile /usr/local/openmq/etc/mq/admin.pw 2>&1 | tee /tmp/purge.log|") || warn "Cannot purge queue: $!\n";
				while(<CLEARPURGE>) { print $_; }
				close(CLEARPURGE);
				exit 2
			} else {
				print "OK Queue $queue_name Messages:${msg_count} State:${state} Producers:${producers} Consumers:${consumers} Size:${msg_size}\n";
			}
	
		}
	}

close(IMQCMD) || warn "Cannot close ${imqcmd}: $!\n";

sub usage {
	print <<EOF;
Usage: $0 -queue <queue name> -warn [message count] -crit [message count]

	e.g. $0 -queue lockerzQueue -warn 25000 -crit 70000

Script will attempt to check the queue status of <queue name> and exit accordingly for nagios
if it is in a warning or critical state
EOF
exit 0
}
 
